apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: deploy-nebula
spec:
  entrypoint: deploy-nebula

  templates:
    - name: deploy-nebula
      inputs:
        parameters:
          - name: name
          - name: nebula-version
      steps:
        - - name: deploy
            template: nebula
            arguments:
              parameters:
                - name: name
                  value: "{{inputs.parameters.name}}"
                - name: nebula-version
                  value: "{{inputs.parameters.nebula-version}}"

        - - name: wait-nebula
            template: wait-nebula
            arguments:
              parameters:
                - name: name
                  value: "{{inputs.parameters.name}}"
    
    - name: wait-nebula
      inputs:
        parameters:
          - name: name
      script:
        image: bitnami/kubectl:latest
        command: [bash]
        source: |
          for i in `seq 1 10`;do
            if (( `kubectl get nebulacluster {{inputs.parameters.name}} -nargo -ojsonpath='{.status.conditions[0].status}'` == True ));then
              echo "nebulacluster is ready"
              exit 0
            fi
            sleep 5
          done
          # timeout error
          echo "nebulacluster is timeout"
          exit 1

    - name: nebula
      inputs:
        parameters:
          - name: name
          - name: nebula-version
      resource:
        action: create
        manifest: |
          apiVersion: apps.nebula-graph.io/v1alpha1
          kind: NebulaCluster
          metadata:
            name: {{inputs.parameters.name}}
          spec:
            graphd:
              resources:
                requests:
                  cpu: "500m"
                  memory: "500Mi"
                limits:
                  cpu: "1"
                  memory: "4Gi"
              replicas: 1
              image: vesoft/nebula-graphd
              version: {{inputs.parameters.nebula-version}}
              service:
                type: NodePort
                externalTrafficPolicy: Local
              storageClaim:
                resources:
                  requests:
                    storage: 2Gi
                storageClassName: nfs-client
            metad:
              resources:
                requests:
                  cpu: "500m"
                  memory: "500Mi"
                limits:
                  cpu: "1"
                  memory: "1Gi"
              replicas: 1
              image: vesoft/nebula-metad
              version: {{inputs.parameters.nebula-version}}
              storageClaim:
                resources:
                  requests:
                    storage: 2Gi
                storageClassName: nfs-client
            storaged:
              resources:
                requests:
                  cpu: "500m"
                  memory: "500Mi"
                limits:
                  cpu: "2"
                  memory: "2Gi"
              replicas: 3
              image: vesoft/nebula-storaged
              version: {{inputs.parameters.nebula-version}}
              storageClaim:
                resources:
                  requests:
                    storage: 2Gi
                storageClassName: nfs-client
            reference:
              name: statefulsets.apps
              version: v1
            schedulerName: default-scheduler

